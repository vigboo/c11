services:
  nat:
    build: ./nat
    container_name: nat
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      uplink_net:
      nat_net:
        ipv4_address: 192.168.99.254
    ports:
      - "80:80"
      - "25:25"
      - "6666:6666"
      - "143:143"
    volumes:
      - ./nat/iptables.rules:/etc/iptables/rules.v4:ro
    command: ["/bin/sh", "/entrypoint.sh"]
    extra_hosts: [ "host.docker.internal:host-gateway" ]

  fw:
    depends_on:
      - nat
    build: ./fw
    container_name: fw
    privileged: true
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      nat_net:
        ipv4_address: 192.168.99.2
      users_net:
        ipv4_address: 192.168.1.254
      dmz_net:
        ipv4_address: 192.168.2.254
      servers_net:
        ipv4_address: 192.168.0.254
    volumes:
      - ./fw/nftables.conf:/etc/nftables.conf:rwx
      # Из-за flush ruleset ломается внутренний DNS-сервис 127.0.0.11 контейнера,
      # поэтому надо вручную назначить корпоративный DNS-сервер
      - ./fw/etc/resolv.conf:/etc/resolv.conf:ro
      - ./ansible_agent_deploy.sh:/usr/local/bin/ansible_agent_deploy.sh:rx
    environment:
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
      - PETROVICH_PASSWORD=${PETROVICH_PASSWORD}

  srv_nginx:
    depends_on: [ fw ]
    image: alpine:3.20
    container_name: srv_nginx
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      servers_net:
        ipv4_address: 192.168.0.10
    volumes:
      - ./www:/usr/share/nginx/html:ro
      - ./srv_nginx/start.sh:/start.sh:ro
      - ./ansible_agent_deploy.sh:/usr/local/bin/ansible_agent_deploy.sh:rx      
    # Настройка маршрута, пользователей, SSH и nginx
    command: >
      sh -c "exec /bin/sh /start.sh"
    environment:
      - GATEWAY_IP=192.168.2.254
      - PETROVICH_PASSWORD=${PETROVICH_PASSWORD}
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
    dns: [ 192.168.0.24 ]

  srv_bunkerweb:
    depends_on: [ fw ]
    image:  bunkerity/bunkerweb-all-in-one:latest
    container_name: srv_bunkerweb
    cap_add: [ "NET_ADMIN" ]
    user: root
    restart: always
    networks:
      dmz_net:
        ipv4_address: 192.168.2.20
    environment:
      # Basic reverse-proxy to webserver
      # Single-site: map localhost to backend via WAF
      - MULTISITE=no
      - SERVER_NAME=localhost 127.0.0.1 darkstore.local _
      - USE_REVERSE_PROXY=yes
      - REVERSE_PROXY_HOST=http://192.168.0.10
      - REVERSE_PROXY_URL=/
      - HTTP_PORT=80
      - AUTOCONF_MODE=yes
      # Baseline WAF/rate limit (conservative defaults; adjust if needed)
      - WAF=on
      - RATE_LIMIT=on
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_BURST=50
      - RATE_LIMIT_PERIOD=1s
      - GATEWAY_IP=192.168.2.254
      - SERVICE_UI=yes
    volumes:
      - ./srv_bunkerweb/conf:/etc/bunkerweb
      - ./srv_bunkerweb/data:/var/lib/bunkerweb
      - ./srv_bunkerweb/start.sh:/start.sh:ro
      # static files for autoconf include path
      # (custom HTTP servers go under /etc/bunkerweb/configs/http)
    dns: [ 192.168.0.24 ]
    entrypoint: ["/bin/sh", "/start.sh"]

  pc_petrovich:
    # user: petrovich
    depends_on: [ fw ]
    build: ./app_empty
    container_name: pc_petrovich
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      users_net:
        ipv4_address: 192.168.1.2
    environment:
      - PETROVICH_PASSWORD=${PETROVICH_PASSWORD}
      - GATEWAY_IP=192.168.1.254
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
    dns: [ 192.168.0.24 ]    

  pc_boss:
    # user: boss
    depends_on: [ fw ]
    build: ./app_empty
    container_name: pc_boss
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      users_net:
        ipv4_address: 192.168.1.4
    environment:
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
      - PETROVICH_PASSWORD=${PETROVICH_PASSWORD}    
      - BOSS_PASSWORD=${BOSS_PASSWORD}
      - GATEWAY_IP=192.168.1.254
    dns: [ 192.168.0.24 ]

  pc_trust:
    # user: trust 
    depends_on: [ fw ]
    build: ./app_empty
    container_name: pc_trust
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      users_net:
        ipv4_address: 192.168.1.5
    environment:
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
      - PETROVICH_PASSWORD=${PETROVICH_PASSWORD}
      - TRUST_PASSWORD=${TRUST_PASSWORD}
      - GATEWAY_IP=192.168.1.254      
    dns: [ 192.168.0.24 ]

  pc_banna:
    # user: b.anna 
    depends_on: [ fw, srv_samba]
    build: ./pc_banna
    container_name: pc_banna
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined    
    restart: always
    networks:
      users_net:
        ipv4_address: 192.168.1.3
    volumes:
      - ./ansible_agent_deploy.sh:/usr/local/bin/ansible_agent_deploy.sh:rx        
    environment:
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
      - PETROVICH_PASSWORD=${PETROVICH_PASSWORD}
      - B_ANNA_PASSWORD=${B_ANNA_PASSWORD}
      - SAMBA_USER=${SAMBA_USER}
      - SAMBA_PASSWORD=${SAMBA_PASSWORD}
      - GATEWAY_IP=192.168.1.254
    dns: [ 192.168.0.24 ]
    # для мониторования шар автоматического (иначе не удалось добиться):
    privileged: true

  srv_mailcow:
    depends_on: [ fw ]
    build: ./srv_mailcow
    container_name: srv_mailcow
    hostname: mail
    domainname: darkstore.local
    shm_size: "256m"
    restart: always
    networks:
      servers_net:
        ipv4_address: 192.168.0.20
    # no host port publishing; access via fw DNAT
    environment:
      # Hostname/FQDN
      - DMS_HELO_NAME=mail.darkstore.local
      # Enable core filtering stack
      - ENABLE_RSPAMD=1
      - ENABLE_CLAMAV=1
      - ENABLE_POSTSCREEN=0
      - POSTSCREEN_ACTION=ignore
      - ENABLE_DNSBL=0
      - PERMIT_DOCKER=connected-networks
      # DKIM auto-generation for darkstore.local
      - ENABLE_OPENDKIM=1
      - DKIM_AUTOGENERATE=1
      - DKIM_SELECTOR=mail
      # IMAP/POP internal only (no host port publishing)
      - ENABLE_IMAP=1
      - ENABLE_POP3=1
      # Disable TLS (lab only) вЂ“ see postfix/dovecot overrides in config
      - SSL_TYPE=manual
      - SSL_CERT_PATH=/tmp/docker-mailserver/ssl/cert.pem
      - SSL_KEY_PATH=/tmp/docker-mailserver/ssl/key.pem
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
    volumes:
      - ./srv_mailcow/config/:/tmp/docker-mailserver/
      - ./srv_mailcow/amavis/50-user:/etc/amavis/conf.d/50-user:rwx
      - ./srv_mailcow/rspamd/:/tmp/docker-mailserver/rspamd/
      - ./ansible_agent_deploy.sh:/usr/local/bin/ansible_agent_deploy.sh:rx      
    dns: [ 192.168.0.24 ]
    
  srv_ansible:
    depends_on: [ fw, srv_samba ]
    build: ./srv_ansible
    container_name: srv_ansible
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      servers_net:
        ipv4_address: 192.168.0.21
    volumes:
      - ./srv_ansible/ansible.cfg:/etc/ansible/ansible.cfg:rw
      - ./srv_ansible/ansible_sync.py:/usr/local/bin/ansible_sync.py:rwx
      - ./srv_ansible/run_ansible_playbooks.sh:/usr/local/bin/run_ansible_playbooks.sh:rwx
      - ./srv_ansible/logs/ansible_runner.log:/var/log/ansible_runner.log:rw
      - ./srv_ansible/logs/get_ansible_workspace.log:/var/log/get_ansible_workspace.log:rw
    environment:
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
      - PETROVICH_PASSWORD=${PETROVICH_PASSWORD}
      - GATEWAY_IP=192.168.0.254
      - SAMBA_USER=${SAMBA_USER}
      - SAMBA_PASSWORD=${SAMBA_PASSWORD}
    
  srv_samba:
    depends_on: [ fw ]
    build: ./srv_samba
    container_name: srv_samba
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      servers_net:
        ipv4_address: 192.168.0.22
    volumes:
      - ./samba/share:/share
      - ./ansible_agent_deploy.sh:/usr/local/bin/ansible_agent_deploy.sh:rx
    environment:
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
      - SAMBA_USER=${SAMBA_USER}
      - SAMBA_PASSWORD=${SAMBA_PASSWORD}
      - SAMBA_SHARE_NAME=${SAMBA_SHARE_NAME}
      - GATEWAY_IP=192.168.0.254
    dns: [ 192.168.0.24 ]
    
  srv_wazuh:
    depends_on: [ fw ]
    build: ./srv_wazuh
    container_name: srv_wazuh
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      servers_net:
        ipv4_address: 192.168.0.23
    environment:
      - WAZUH_PASSWORD=${WAZUH_PASSWORD}
      - GATEWAY_IP=192.168.0.254
      - ANSIBLE_PASSWORD=${ANSIBLE_PASSWORD}
    dns: [ 192.168.0.24 ]
    
  srv_dns:
    depends_on: [ fw ]
    image: coredns/coredns:1.11.1
    container_name: srv_dns
    cap_add: [ "NET_ADMIN" ]
    restart: always
    networks:
      servers_net:
        ipv4_address: 192.168.0.24
    volumes:
      - ./srv_dns/Corefile:/etc/coredns/Corefile:ro
      - ./srv_dns/darkstore.local.db:/etc/coredns/darkstore.local.db:ro
    command: ["-conf", "/etc/coredns/Corefile"]
    expose:
      - "53"
      - "53/udp"
    

networks:
  uplink_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24
  nat_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.99.0/24
  users_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
  dmz_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.2.0/24
  servers_net:
    ipam:
      config:
        - subnet: 192.168.0.0/24
